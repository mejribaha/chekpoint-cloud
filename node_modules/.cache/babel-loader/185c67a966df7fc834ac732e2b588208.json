{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nvar _pointGeometry = require('@mapbox/point-geometry');\nvar _pointGeometry2 = _interopRequireDefault(_pointGeometry);\nvar _lat_lng = require('./lib_geo/lat_lng');\nvar _lat_lng2 = _interopRequireDefault(_lat_lng);\nvar _transform = require('./lib_geo/transform');\nvar _transform2 = _interopRequireDefault(_transform);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nvar Geo = function () {\n  function Geo(tileSize) {\n    _classCallCheck(this, Geo);\n\n    // left_top view пользует гугл\n    // super();\n    this.hasSize_ = false;\n    this.hasView_ = false;\n    this.transform_ = new _transform2.default(tileSize || 512);\n  }\n  Geo.prototype.setView = function setView(center, zoom, bearing) {\n    this.transform_.center = _lat_lng2.default.convert(center);\n    this.transform_.zoom = +zoom;\n    this.transform_.bearing = +bearing;\n    this.hasView_ = true;\n  };\n  Geo.prototype.setViewSize = function setViewSize(width, height) {\n    this.transform_.width = width;\n    this.transform_.height = height;\n    this.hasSize_ = true;\n  };\n  Geo.prototype.setMapCanvasProjection = function setMapCanvasProjection(maps, mapCanvasProjection) {\n    this.maps_ = maps;\n    this.mapCanvasProjection_ = mapCanvasProjection;\n  };\n  Geo.prototype.canProject = function canProject() {\n    return this.hasSize_ && this.hasView_;\n  };\n  Geo.prototype.hasSize = function hasSize() {\n    return this.hasSize_;\n  };\n\n  /** Returns the pixel position relative to the map center. */\n\n  Geo.prototype.fromLatLngToCenterPixel = function fromLatLngToCenterPixel(ptLatLng) {\n    return this.transform_.locationPoint(_lat_lng2.default.convert(ptLatLng));\n  };\n\n  /**\n   * Returns the pixel position relative to the map panes,\n   * or relative to the map center if there are no panes.\n   */\n\n  Geo.prototype.fromLatLngToDivPixel = function fromLatLngToDivPixel(ptLatLng) {\n    if (this.mapCanvasProjection_) {\n      var latLng = new this.maps_.LatLng(ptLatLng.lat, ptLatLng.lng);\n      return this.mapCanvasProjection_.fromLatLngToDivPixel(latLng);\n    }\n    return this.fromLatLngToCenterPixel(ptLatLng);\n  };\n\n  /** Returns the pixel position relative to the map top-left. */\n\n  Geo.prototype.fromLatLngToContainerPixel = function fromLatLngToContainerPixel(ptLatLng) {\n    if (this.mapCanvasProjection_) {\n      var latLng = new this.maps_.LatLng(ptLatLng.lat, ptLatLng.lng);\n      return this.mapCanvasProjection_.fromLatLngToContainerPixel(latLng);\n    }\n    var pt = this.fromLatLngToCenterPixel(ptLatLng);\n    pt.x -= this.transform_.worldSize * Math.round(pt.x / this.transform_.worldSize);\n    pt.x += this.transform_.width / 2;\n    pt.y += this.transform_.height / 2;\n    return pt;\n  };\n\n  /** Returns the LatLng for the given offset from the map top-left. */\n\n  Geo.prototype.fromContainerPixelToLatLng = function fromContainerPixelToLatLng(ptXY) {\n    if (this.mapCanvasProjection_) {\n      var latLng = this.mapCanvasProjection_.fromContainerPixelToLatLng(ptXY);\n      return {\n        lat: latLng.lat(),\n        lng: latLng.lng()\n      };\n    }\n    var ptxy = _extends({}, ptXY);\n    ptxy.x -= this.transform_.width / 2;\n    ptxy.y -= this.transform_.height / 2;\n    var ptRes = this.transform_.pointLocation(_pointGeometry2.default.convert(ptxy));\n    ptRes.lng -= 360 * Math.round(ptRes.lng / 360); // convert 2 google format\n    return ptRes;\n  };\n  Geo.prototype.getWidth = function getWidth() {\n    return this.transform_.width;\n  };\n  Geo.prototype.getHeight = function getHeight() {\n    return this.transform_.height;\n  };\n  Geo.prototype.getZoom = function getZoom() {\n    return this.transform_.zoom;\n  };\n  Geo.prototype.getCenter = function getCenter() {\n    var ptRes = this.transform_.pointLocation({\n      x: 0,\n      y: 0\n    });\n    return ptRes;\n  };\n  Geo.prototype.getBounds = function getBounds(margins, roundFactor) {\n    var bndT = margins && margins[0] || 0;\n    var bndR = margins && margins[1] || 0;\n    var bndB = margins && margins[2] || 0;\n    var bndL = margins && margins[3] || 0;\n    if (this.getWidth() - bndR - bndL > 0 && this.getHeight() - bndT - bndB > 0) {\n      var topLeftCorner = this.transform_.pointLocation(_pointGeometry2.default.convert({\n        x: bndL - this.getWidth() / 2,\n        y: bndT - this.getHeight() / 2\n      }));\n      var bottomRightCorner = this.transform_.pointLocation(_pointGeometry2.default.convert({\n        x: this.getWidth() / 2 - bndR,\n        y: this.getHeight() / 2 - bndB\n      }));\n      var res = [topLeftCorner.lat, topLeftCorner.lng,\n      // NW\n      bottomRightCorner.lat, bottomRightCorner.lng,\n      // SE\n      bottomRightCorner.lat, topLeftCorner.lng,\n      // SW\n      topLeftCorner.lat, bottomRightCorner.lng];\n      if (roundFactor) {\n        res = res.map(function (r) {\n          return Math.round(r * roundFactor) / roundFactor;\n        });\n      }\n      return res;\n    }\n    return [0, 0, 0, 0];\n  };\n  return Geo;\n}();\nexports.default = Geo;","map":{"version":3,"names":["exports","__esModule","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_pointGeometry","require","_pointGeometry2","_interopRequireDefault","_lat_lng","_lat_lng2","_transform","_transform2","obj","default","_classCallCheck","instance","Constructor","TypeError","Geo","tileSize","hasSize_","hasView_","transform_","setView","center","zoom","bearing","convert","setViewSize","width","height","setMapCanvasProjection","maps","mapCanvasProjection","maps_","mapCanvasProjection_","canProject","hasSize","fromLatLngToCenterPixel","ptLatLng","locationPoint","fromLatLngToDivPixel","latLng","LatLng","lat","lng","fromLatLngToContainerPixel","pt","x","worldSize","Math","round","y","fromContainerPixelToLatLng","ptXY","ptxy","ptRes","pointLocation","getWidth","getHeight","getZoom","getCenter","getBounds","margins","roundFactor","bndT","bndR","bndB","bndL","topLeftCorner","bottomRightCorner","res","map","r"],"sources":["C:/Users/hp/Desktop/check-cloud/node_modules/google-map-react/lib/utils/geo.js"],"sourcesContent":["'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _pointGeometry = require('@mapbox/point-geometry');\n\nvar _pointGeometry2 = _interopRequireDefault(_pointGeometry);\n\nvar _lat_lng = require('./lib_geo/lat_lng');\n\nvar _lat_lng2 = _interopRequireDefault(_lat_lng);\n\nvar _transform = require('./lib_geo/transform');\n\nvar _transform2 = _interopRequireDefault(_transform);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Geo = function () {\n  function Geo(tileSize) {\n    _classCallCheck(this, Geo);\n\n    // left_top view пользует гугл\n    // super();\n    this.hasSize_ = false;\n    this.hasView_ = false;\n    this.transform_ = new _transform2.default(tileSize || 512);\n  }\n\n  Geo.prototype.setView = function setView(center, zoom, bearing) {\n    this.transform_.center = _lat_lng2.default.convert(center);\n    this.transform_.zoom = +zoom;\n    this.transform_.bearing = +bearing;\n    this.hasView_ = true;\n  };\n\n  Geo.prototype.setViewSize = function setViewSize(width, height) {\n    this.transform_.width = width;\n    this.transform_.height = height;\n    this.hasSize_ = true;\n  };\n\n  Geo.prototype.setMapCanvasProjection = function setMapCanvasProjection(maps, mapCanvasProjection) {\n    this.maps_ = maps;\n    this.mapCanvasProjection_ = mapCanvasProjection;\n  };\n\n  Geo.prototype.canProject = function canProject() {\n    return this.hasSize_ && this.hasView_;\n  };\n\n  Geo.prototype.hasSize = function hasSize() {\n    return this.hasSize_;\n  };\n\n  /** Returns the pixel position relative to the map center. */\n\n\n  Geo.prototype.fromLatLngToCenterPixel = function fromLatLngToCenterPixel(ptLatLng) {\n    return this.transform_.locationPoint(_lat_lng2.default.convert(ptLatLng));\n  };\n\n  /**\n   * Returns the pixel position relative to the map panes,\n   * or relative to the map center if there are no panes.\n   */\n\n\n  Geo.prototype.fromLatLngToDivPixel = function fromLatLngToDivPixel(ptLatLng) {\n    if (this.mapCanvasProjection_) {\n      var latLng = new this.maps_.LatLng(ptLatLng.lat, ptLatLng.lng);\n      return this.mapCanvasProjection_.fromLatLngToDivPixel(latLng);\n    }\n    return this.fromLatLngToCenterPixel(ptLatLng);\n  };\n\n  /** Returns the pixel position relative to the map top-left. */\n\n\n  Geo.prototype.fromLatLngToContainerPixel = function fromLatLngToContainerPixel(ptLatLng) {\n    if (this.mapCanvasProjection_) {\n      var latLng = new this.maps_.LatLng(ptLatLng.lat, ptLatLng.lng);\n      return this.mapCanvasProjection_.fromLatLngToContainerPixel(latLng);\n    }\n\n    var pt = this.fromLatLngToCenterPixel(ptLatLng);\n    pt.x -= this.transform_.worldSize * Math.round(pt.x / this.transform_.worldSize);\n\n    pt.x += this.transform_.width / 2;\n    pt.y += this.transform_.height / 2;\n\n    return pt;\n  };\n\n  /** Returns the LatLng for the given offset from the map top-left. */\n\n\n  Geo.prototype.fromContainerPixelToLatLng = function fromContainerPixelToLatLng(ptXY) {\n    if (this.mapCanvasProjection_) {\n      var latLng = this.mapCanvasProjection_.fromContainerPixelToLatLng(ptXY);\n      return { lat: latLng.lat(), lng: latLng.lng() };\n    }\n\n    var ptxy = _extends({}, ptXY);\n    ptxy.x -= this.transform_.width / 2;\n    ptxy.y -= this.transform_.height / 2;\n    var ptRes = this.transform_.pointLocation(_pointGeometry2.default.convert(ptxy));\n\n    ptRes.lng -= 360 * Math.round(ptRes.lng / 360); // convert 2 google format\n    return ptRes;\n  };\n\n  Geo.prototype.getWidth = function getWidth() {\n    return this.transform_.width;\n  };\n\n  Geo.prototype.getHeight = function getHeight() {\n    return this.transform_.height;\n  };\n\n  Geo.prototype.getZoom = function getZoom() {\n    return this.transform_.zoom;\n  };\n\n  Geo.prototype.getCenter = function getCenter() {\n    var ptRes = this.transform_.pointLocation({ x: 0, y: 0 });\n\n    return ptRes;\n  };\n\n  Geo.prototype.getBounds = function getBounds(margins, roundFactor) {\n    var bndT = margins && margins[0] || 0;\n    var bndR = margins && margins[1] || 0;\n    var bndB = margins && margins[2] || 0;\n    var bndL = margins && margins[3] || 0;\n\n    if (this.getWidth() - bndR - bndL > 0 && this.getHeight() - bndT - bndB > 0) {\n      var topLeftCorner = this.transform_.pointLocation(_pointGeometry2.default.convert({\n        x: bndL - this.getWidth() / 2,\n        y: bndT - this.getHeight() / 2\n      }));\n      var bottomRightCorner = this.transform_.pointLocation(_pointGeometry2.default.convert({\n        x: this.getWidth() / 2 - bndR,\n        y: this.getHeight() / 2 - bndB\n      }));\n\n      var res = [topLeftCorner.lat, topLeftCorner.lng, // NW\n      bottomRightCorner.lat, bottomRightCorner.lng, // SE\n      bottomRightCorner.lat, topLeftCorner.lng, // SW\n      topLeftCorner.lat, bottomRightCorner.lng];\n\n      if (roundFactor) {\n        res = res.map(function (r) {\n          return Math.round(r * roundFactor) / roundFactor;\n        });\n      }\n      return res;\n    }\n\n    return [0, 0, 0, 0];\n  };\n\n  return Geo;\n}();\n\nexports.default = Geo;"],"mappings":"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"},"metadata":{},"sourceType":"script"}